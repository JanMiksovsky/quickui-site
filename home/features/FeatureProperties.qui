<Control name="FeatureProperties">
<prototype>
<Feature>

<name>Easy property definition</name>

<description>

<p>
    <ScreencastLink href="http://www.youtube.com/watch?v=skyxSnywAYo">Video: Defining control properties in QuickUI</ScreencastLink>
</p>

<p>
The QuickUI runtime includes a range of helper functions that make it trivial
to define properties on a control class and map the property values to (and from)
control DOM element content, CSS styles, and more. Properties can be specified
in markup as tag attributes or tag content. Compound property syntax lets the markup
for control consumers define rich property values. All proprties are directly
accessible as JavaScript class members.
</p>

</description>

<control>
<pre>
&lt;Control name="Recipe"&gt;

&lt;content&gt;
  &lt;div&gt;
    Name: &lt;span id="Recipe_name"/&gt;
    &lt;span id="Recipe_rating"/&gt;
  &lt;/div&gt;
  &lt;div id="Recipe_content"/&gt;
&lt;/content&gt;

&lt;script&gt;
Recipe.prototype.extend({

content:
Control.bindTo("$Recipe_content", "content"),

name:
Control.bindTo("$Recipe_name", "content"),

rating: Control.property.integer(
  function(rating) {
    this.$Recipe_rating().text(
      "*****".substr(0, rating));
  })

})
&lt;/script&gt;

&lt;/Control&gt;
</pre>
</control>

<example>
<pre>
&lt;Recipe name="Lasagna" rating="3"&gt;
  Quick and easy lasagna
&lt;/Recipe&gt;
&lt;Recipe&gt;
  &lt;name&gt;
    Pasta &lt;i&gt;con i fagioli&lt;/i&gt;
  &lt;/name&gt;
  &lt;rating&gt;5&lt;/rating&gt;
  &lt;content&gt;
    A &lt;b&gt;great&lt;/b&gt;
    Tuscan peasant dish
  &lt;/content&gt;
&lt;/Recipe&gt;
</pre>
</example>

<result>
<FeaturePropertiesDemo/>
</result>

</Feature>
</prototype>
</Control>
