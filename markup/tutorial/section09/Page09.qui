<Control className="Page09">
<prototype>
<MarkupAreaPage title="Control content">

<p>
The previous section on the <Link href="/markup/tutorial/section08">
markup with properties</Link> described how we could implicitly set the content
of a control instance by placing elements inside a control’s tag.
It turns out we can do the same thing to the top level <Tag>Control</Tag> tag
as well.
</p>

<p>
At the start of this tutorial, we defined the Greet control in a compact form:
</p>

<pre>
&lt;Control name="Greet"&gt;
    Hello, world!
&lt;/Control&gt;
</pre>

<p>
In fact, this is just shorthand for an explicit form:
</p>

<pre>
&lt;Control name="Greet"&gt;

&lt;content&gt;
    Hello, world!
&lt;/content&gt;

&lt;/Control&gt;
</pre>

<p>
In other words, the <Tag>content</Tag> within a top-level <Tag>Control</Tag>
class defines the default contents of new instances of that class. The generated
JavaScript code for a control class, in fact, simply creates a new instance of
the QuickUI base class, Control, then invokes that class’ content()
property setter.
</p>

<p>
The control’s <Tag>content</Tag> is optional. As a general rule, very simple
controls that serve as HTML macros are perhaps easier to read without explicit
use of the <Tag>content</Tag> tag. When the top-level <Tag>Control</Tag> tag
grows to include additional child tags, like <Tag>script</Tag> above,
it seems like inclusion of <Tag>content</Tag> can help delineate those
different aspects of the control.
</p>

<p>Accordingly, we can now include an explicit <Tag>content</Tag> tag in our
sample Greet control to (arguably) improve legibility:
</p>

<SourceFileContents path="Greet.qui" />

<p>
In this light, the <Tag>content</Tag> of a control in a Quick markup file is
analogous to the <Tag>body</Tag> of an HTML file. Whereas HTML places the
<Tag>body</Tag> at the end, by convention Quick markup places <Tag>content</Tag>
first, as its almost always the first thing one wants to read to understand what
a control does and how it will look at run-time.
</p>

<Link href="/markup/tutorial/section10">Next ></Link>

</MarkupAreaPage>
</prototype>
</Control>