<Control name="CodeEditor">

<content>
    
    <div id="toolbar">
        <BasicButton id="buttonRun">Run</BasicButton> (Ctrl+Enter)
    </div>

    <div id="runner">
        <div>
            <textarea id="CodeEditor_code" class="pane"/>
        </div>
        <div id="result" class="pane" />
    </div>
    
    <div id="CodeEditor_error"/>
    
</content>

<style>
#runner {
    display: table;
    height: 400px;
    width: 100%;
}

#runner > * {
    border: 1px solid lightgray;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: table-cell;
    height: 100%;
    max-width: 400px;
    min-width: 400px;
    vertical-align: top;
    width: 400px;
}

.pane {
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: 2px;
}

#CodeEditor_code {
    border: none;
    /* Inconsolata from Google Web Fonts */
    font-family: Inconsolata, Monaco, Courier, Courier New, monospace;
    height: 100%;
    margin: 0;
    resize: none;
    width: 100%;
}
</style>

<script>
CodeEditor.prototype.extend({
    
    code: Control.chain( "$CodeEditor_code", "content", function() {
        if ( this.inDocument() ) {
            this.run();
        }
    }),
    
    error: Control.chain( "$CodeEditor_error", "content" ),
    
    initialize: function() {
        
        var self = this;
        this.$buttonRun().click( function() {
            self.run();
        });
        
        this
            .keydown( function( event ) {
                self._keydown( event );
            })
            .inDocument( function( $control ) {
                $control.run();
                $control.$CodeEditor_code().focus();
            });
        
    },
    
    result: Control.chain( "$result", "content" ),
    
    run: function() {
        
        this.error( null );
        
        this.$result().html( "<div id='demo'/>" );
        try {
            eval( this.code() );
        }
        catch ( error ) {
            this.error( error.toString() );
        }
    },
    
    _keydown: function( event ) {
        if ( event.which === 13 && event.ctrlKey ) {
            this.run();
            event.stopPropagation( true );
        }
    }
    
});
</script>

</Control>
