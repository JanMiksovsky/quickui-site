<!-- Shows the documented members for a control class. -->
 
<Control className="ControlMemberTable">

<prototype>
    <DictionaryTable/>
</prototype>

<style>
{
    border-collapse: collapse;
}

> * {
    border-top: 1px dotted #D7C5B4;
}
> *:first-child {
    border: none;
}

> * > * {
    padding: 0.5em 1em 0.5em 0;
}
> * > *:first-child {
    color: #928274;
    font-weight: bold;
}
</style>

<script>
ControlMemberTable.prototype.extend({
    
    controlClass: Control.property[ "class" ]( function( classFn ) {
        var className = classFn.className;
        var documentation = controlDocumentation[ className ];
        var formattedDocumentation = this._formatDocumentation( documentation );
        this.content( formattedDocumentation );
    }),
    
    initialize: function() {
        // TODO: Remove this bit, which is just for testing purposes...
        if ( !this.controlClass() ) {
            this.controlClass( AdPlaceholder );
        }
    },
    
    _formatDocumentation: function( documentation ) {
        var formattedDocumentation = {};
        if ( documentation ) {
            $.each( documentation, function( memberName, memberDescription ) {
                
                // Add break tags wherever there are consecutive line breaks.
                var formattedDescription = memberDescription.replace( /\n\n/g, "<br/><br/>" );
                
                // Add break tags wherever line breaks are followed by whitespace.
                formattedDescription = formattedDescription.replace( /\n\s+/g, "<br/>" );
                
                formattedDocumentation[ memberName ] = formattedDescription;
            });
        }
        return formattedDocumentation;
    }
    
});

/*
 * Placeholder declaration that will keep things from failing if
 * the control documentation isn't loaded.
 */
var controlDocumentation = {};
</script>

</Control>
