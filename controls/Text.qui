<!--
Display a chunk of text that may have line breaks, tabs, and/or HTML entities.

This control handles common cases where one wants to render an arbitrary
block of text. Using $.text() won't suffice, because that won't handle
line breaks. Using $.html() doesn't always work either, because HTML
entities (e.g., "<") found in the text will get interpreted as HTML instead of
being rendered as plain text.

This uses a pre tag to render the text, but applies the control's own font
If the control has a proportionally-spaced font, the pre tag will end up with that
instead of the default pre styling.
-->

<Control name="Text">

<script>
Text.prototype.extend({
    
    _spacesForTab: Control.property(),
        
    content: Control.property( function( content ) {
        
        // Map line breaks to break tags, special characters to entities,
        // tabs to spaces;
        var html = content
            .replace( /&/g, "&amp;" )   // Ampersands before other entities
            .replace( /</g, "&lt;" )
            .replace( />/g, "&gt;" )
            .replace( /\n/g, "<br/>" );
        
        var spacesForTab = this._spacesForTab();
        if ( spacesForTab ) {
            html = html.replace( /\t/g, spacesForTab );
        }
            
        // Convert runs of remaining whitespace to non-breaking spaces.
        var regex = /\s\s+/g;
        var match = regex.exec( html );
        while ( match !== null ) {
            var whitespace = match[0];
            var length = whitespace.length;
            var index = match.index;
            var nonBreakingSpaces = Array( length + 1 ).join( "&nbsp;" );
            html = html.slice( 0, index ) + nonBreakingSpaces
                + html.slice( index + length );
            match = regex.exec( html );
        }
        
        this.html( html );
    }),
    
    /*
     * If set, tabs in the file will be replaced this this many non-breaking
     * spaces.
     */
    tabToSpacesCount: Control.property.integer( function( count ) {
        var spaces = count
            ? Array( count + 1 ).join( "&nbsp;" )    // a run of <count> spaces
            : null;
        this._spacesForTab( spaces );
    })    
});
</script>

</Control>
