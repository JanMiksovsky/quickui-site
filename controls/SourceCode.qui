<!--
Show a block of source code.
Code is colorized using the excellent highlight.js plugin, which can be
found at http://softwaremaniacs.org/soft/highlight/en/. The highlight.js
script must be loaded for code to be colorized.
-->

<Control className="SourceCode" tag="pre" genericDefault="true">

<style>
{
    margin: 0;
    white-space; pre-wrap;
}

/* Generic appearance */
.SourceCode.generic .comment {
    color: gray;
}

.SourceCode.generic .tag {
}
.SourceCode.generic .tag .title {
    color: blue;
}
.SourceCode.generic .tag .attribute {
    /* font-style: italic; */
}
.SourceCode.generic .tag .value {
    color: green;
}

.SourceCode.generic .css .value {
    color: green;
}

.SourceCode.generic .javascript .keyword {
    color: blue;
}
.SourceCode.generic .javascript .string {
    color: green;
}
</style>

<script>
SourceCode.prototype.extend({
    
    // TODO: Remove this complexity once Highlight.js can handle working
    // against a pre element not in the DOM.
    _needsRefresh: Control.property.bool(),
    
    initialize: function() {
        this
            .addClass( "language-html" )
            .inDocument( function() {
                if ( this._needsRefresh() ) {
                    this._refresh();
                    this._needsRefresh( false );
                }
            });
    },
    
    content: Control.property( function ( content ) {
        if ( this.inDocument() ) {
            this._refresh();
        } else {
            this._needsRefresh( true );
        }
    }),
    
    _refresh: function() {
        
        // To simplify the use of this control with CDATA elements,
        // which add extra space unless the CDATA and its contents are
        // jammed against the opening SourceCode tag, we trim whitespace
        // at the beginning and end of the contents.
        var text = $.trim( this.content() ); 
            
        // Remove carriage returns so IE8 doesn't render extra lines.
        text = text.replace( /\r/g, "" );

        // Using $.text() escapes the HTML/XML in the content.
        this
            .empty()
            .text( text );
        
        // Colorize code with highlight.js if installed
        if ( window.hljs ) {
            // HACK: disable highlighting in IE8, which does weird things
            // with formatted XML tags, until this can be resolved. 
            if ( !$.browser.msie || parseInt( $.browser.version ) >= 9 ) {
                this.each( function( index, element ) {
                    hljs.highlightBlock( element );
                });
            }
        }
    }
    
})    
</script>

</Control>
