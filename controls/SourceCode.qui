<!--
Show a block of source code.
Code is colorized using the excellent highlight.js plugin, which can be
found at http://softwaremaniacs.org/soft/highlight/en/. The highlight.js
script must be loaded for code to be colorized.
-->

<Control name="SourceCode" tag="pre">

<style>
{
    white-space; pre-wrap;
}

/* Generic appearance */
.SourceCode.generic.comment {
    color: gray;
}

.SourceCode.generic .tag {
}
.SourceCode.generic .tag .title {
    color: blue;
}
.SourceCode.generic .tag .attribute {
    font-style: italic;
}
.SourceCode.generic .tag .value {
    color: green;
}

.SourceCode.generic .css .value {
    color: green;
}

.SourceCode.generic .javascript .keyword {
    color: blue;
}
.SourceCode.generic .javascript .string {
    color: green;
}
</style>

<script>
SourceCode.prototype.extend({
    
    initialize: function() {
        this._super();
        this
            .genericIfClassIs( SourceCode )
            .addClass( "language-html" )
            .inDocument( function( $control ) {
                $control._refresh();
            });
    },
    
    content: Control.property( function ( content ) {
        if ( this.inDocument() ) {
            this._refresh();
        }
    }),
    
    _refresh: function() {
        
        // To simplify the use of this control with CDATA elements,
        // which add extra space unless the CDATA and its contents are
        // jammed against the opening SourceCode tag, we trim whitespace
        // at the beginning and end of the contents.
        var trimmed = $.trim( this.content() ); 

        // Using $.text() escapes the HTML/XML in the content.
        this
            .empty()
            .text( trimmed );
        
        // Colorize code with highlight.js if installed
        if ( window.hljs ) {
            this.each( function( index, element ) {
                hljs.highlightBlock( element );
            });
        }
    }
    
})    
</script>

</Control>
