<Control className="TutorialPage">

<prototype>
    <SitePage>
        
        <navigationLinks>

            <Link href="/tutorial/">Introduction</Link>
            
            <h2>Using controls</h2>
            <Link href="/tutorial/context-independent.html">Context independence</Link>
            <Link href="/tutorial/defined-by-classes.html">Control classes</Link>
            <Link href="/tutorial/controls-are-composable.html">Controls are composable</Link>
            <Link href="/tutorial/inherit-from-jQuery.html">Inheriting from jQuery</Link>
            <Link href="/tutorial/content.html">Control content</Link>
            <Link href="/tutorial/properties.html">Control properties</Link>
            <Link href="/tutorial/casting.html">Casting jQuery objects</Link>
            <Link href="/tutorial/controls-from-elements.html">Using existing elements</Link>
            <Link href="/tutorial/css-classes.html">CSS class names</Link>
            <Link href="/tutorial/manipulating-arrays.html">Control arrays</Link>
            <Link href="/tutorial/event-handlers.html">Handling events</Link>
            <Link href="/tutorial/meta-controls.html">Meta-controls</Link>

            <h2>Designing controls</h2>
            <Link href="/tutorial/creating-control-class.html">Creating a new class</Link>
            <Link href="/tutorial/json-content.html">Setting default content</Link>
            <Link href="/tutorial/extending-control-prototype.html">Adding functionality</Link>
            <Link href="/tutorial/element-reference-functions.html">Referencing elements</Link>
            <Link href="/tutorial/defining-properties.html">Exposing properties</Link>
            <Link href="/tutorial/handling-content.html">Properties handling content</Link>
            <Link href="/tutorial/control-chain-helper.html">Concise property definition</Link>
            <Link href="/tutorial/subclassing-other-classes.html">Subclassing other classes</Link>
            <Link href="/tutorial/overriding-content-property.html">Custom content properties</Link>
            <Link href="/tutorial/initialize.html">Initialization</Link>
            <Link href="/tutorial/control-property-helper.html">Property storage</Link>
            
            <h2>Advanced topics</h2>
            <Link href="/tutorial/jQuery-UI.html">QuickUI + jQuery UI</Link>
            <Link href="/tutorial/rehydration.html">Controls in static HTML</Link>
            <Link href="/tutorial/inDocument.html">Waiting to be in the DOM</Link>
            
            <h2>Conclusion</h2>
            <Link href="/tutorial/using-QuickUI.html">QuickUI in your projects</Link>
            
        </navigationLinks>
    
        <div ref="TutorialPage_content"/>
    
        <CodeEditor ref="editor"/>
        
        <SiteButton ref="buttonNext">Next Â»</SiteButton>
        
    </SitePage>
</prototype>

<style>
#SitePage_content {
    max-width: inherit;
}

h1, h2, p, ol, ul, pre {
    max-width: 800px;
}

#editor {
    margin: 1em 0;
}

#buttonNext {
    display: none;
}

p.highlight {
    border-width: 1px;
    border-color: #D7C5B4;
    border-top-style: solid;
    border-bottom-style: solid;
    margin: 2em 0;
    padding: 1em 0;
}
</style>

<script>
TutorialPage.prototype.extend({
    
    content: Control.chain( "$TutorialPage_content", "content" ),
    
    initialize: function() {
        
        this._super();
        
        var self = this;
        this.$buttonNext().click( function() {
            var nextPage = self.nextPage();
            if ( nextPage ) {
                window.location = nextPage;
            }
        });
        
        this.$editor().code( this._demo() );
    },
    
    nextPage: Control.property( function( nextPage) {
        this.$buttonNext().css( "display", nextPage ? "inline-block": "none" );
    }),
    
    editorVisible: Control.chain( "$editor", "visibility" ),
    
    // Return the code from the page's script tag.
    _demo: function() {
        var code = $.trim( $( "script#demo" ).html() );
        if ( code.length > 0 ) {
            // Remove the first and last lines: the demo function wrapper.
            lines = code.split( "\n" );
            lines = lines.slice( 1, lines.length - 2 );
            code = $.trim( lines.join( "\n" ) );
        }
        return code;
    }

});
</script>

</Control>
